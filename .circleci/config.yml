version: 2
jobs:
  build:
    environment:
      - ENV_TARGET=org
      - NOW_TARGET=avatar-assets
    docker:
      - image: circleci/node:10
    working_directory: /tmp/app
    steps:
      - checkout
      - restore_cache:
          name: Restore dependencies cache
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install packages
          command: npm install
      - save_cache:
          name: Save dependencies cache
          paths:
            - node_modules
          key: dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Build catalog
          command: make compile && make test && make catalog
      - save_cache:
          paths:
            - dist
          key: build-{{ .Branch }}-{{ .Revision }}
  deploy:
    docker:
      - image: circleci/node:10
    working_directory: /tmp/app
    steps:
      - restore_cache:
          keys:
            - build-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Install now
          command: sudo npm install --global --unsafe-perm now
      - run:
          name: Deploy to now.sh
          command: cd dist && now alias $(now --scope decentraland --name dcl-base-exclusive --token $NOW_TOKEN .) dcl-base-exclusive.now.sh --scope decentraland --token $NOW_TOKEN
workflows:
  version: 2
  build-deploy-release:
    jobs:
      - build:
          context: avatar-assets-prd
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - build
